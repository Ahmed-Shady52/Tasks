<?xml version="1.0" encoding="UTF-8" ?>

<odoo>
    <data noupdate="1">

<!--        defining the hr manager and employee groups and inheriting the employee group to the hr manager-->
        <record id="group_hr_manager" model="res.groups">
            <field name="name">HR Manager</field>
            <field name="category_id" ref="base.module_category_human_resources_employees"/>
            <field name="implied_ids" eval="[(4, ref('employee_certifications.group_hr_employee'))]"/>
            <field name="comment">The user will be able to approve document created by employees.</field>
        </record>

        <record id="group_hr_employee" model="res.groups">
            <field name="name">Employee</field>
            <field name="category_id" ref="base.module_category_human_resources_employees"/>
            <field name="implied_ids" eval="[(4, ref('base.group_user'))]"/>
            <field name="comment">The user will be able to approve document created by employees.</field>
        </record>

<!--        creating record rules where employees can only see their own certifications and not edit them but managers access all certifications and edit/ delete/create  -->
        <record id="hr_employee_rule" model="ir.rule">
            <field name="name">HR Employee Rule</field>
            <field name="model_id" ref="model_employee_certification" />
            <field name="domain_force">[("employee_id.user_id.id", '=' , user.id)]</field>
            <field name="groups" eval="[(4, ref('employee_certifications.group_hr_employee'))]"/>
        </record>

        <record id="hr_manager_rule" model="ir.rule">
            <field name="name">HR Manager Rule</field>
            <field name="model_id" ref="model_employee_certification" />
            <field name="domain_force">[(1, '=', 1)]</field>
            <field name="groups" eval="[(4, ref('employee_certifications.group_hr_manager'))]"/>
        </record>


    </data>
</odoo>





